// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {FunctionSelector} from "../src/FunctionSelector.sol";
import {Socket_Struct} from "../src/Socket_Struct.sol";


contract CounterTest is Test {
    FunctionSelector public functionSelector;

    function setUp() public {
        functionSelector = new FunctionSelector();
    }



// bytes data = hex"0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000d85eb87cab9041ad00764b95796702b1104f42d7000000000000000000000000640952e7984f2ecedead8fd97aa618ab1210a21c000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000176c40000000000000000000000000000000000000000000000000000000000000184303006670000000000000000000000000000000000000000000000000000000000000020000000380000000000000000000000000000000000000000000000000000000003020301000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000080000000200000bfc640952e7984f2ecedead8fd97aa618ab1210a21c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f4f67e8fbd5071b11ba4266cc92e370588d8b129000000000000000000000000244619179a9457d7a4f9fb432447e6de6b9ebb5400000000000000000000000000000000000000000000000000000000000176c400000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
bytes data = hex"a7571a030000000000000000000000000000000000000000000000000000000000000080000000000000000000000000244619179a9457d7a4f9fb432447e6de6b9ebb540000000000000000000000003ea8654d5755e673599473ab37d92788b5ba12ae0000000000000000000000000000000000000000000000000000000002faf080000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000000200000000000000000000000007ace89e21a5c3300b22dfe168ae256246ebfa9e2000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000002fadcf800000000000000000000000000000000000000000000000000000000000000050000000000000000000000003ea8654d5755e673599473ab37d92788b5ba12ae000000000000000000000000640952e7984f2ecedead8fd97aa618ab1210a21c0000000000000000000000006c9944674c1d2cf6c4c4999fc7290ba105dcd70e0000000000000000000000001c1b06405058abe02e4748753aed1458befee3b9000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000014418cbafe50000000000000000000000000000000000000000000000000000000002fadcf800000000000000000000000000000000000000000000003fb98cb1e6fe3a232b00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000f4f67e8fbd5071b11ba4266cc92e370588d8b1290000000000000000000000000000000000000000000000000384440ccc735c1800000000000000000000000000000000000000000000000000000000000000040000000000000000000000003ea8654d5755e673599473ab37d92788b5ba12ae000000000000000000000000640952e7984f2ecedead8fd97aa618ab1210a21c0000000000000000000000006c9944674c1d2cf6c4c4999fc7290ba105dcd70e0000000000000000000000001c1b06405058abe02e4748753aed1458befee3b900000000000000000000000000000000000000000000000000000000";
    function test() public {
        bytes4 test22 = functionSelector.testqqq();
        
        // Socket_Struct.User_Request memory test23 = functionSelector.changeChangeData(data);
        // FunctionSelector.CCCPV1BridgeAction memory test23 = functionSelector.changeChangeData(data);

        // functionSelector.call(_actionList, _recipient, _tokenAddr, _amount);
        
        
        (bool success, bytes memory result) = address(functionSelector).call(data);
        // (bool success, bytes memory data) = _token.call(abi.encodeWithSelector(0x23b872dd, from, _to, _value));
        // 0xa7571a03
    }
}

// 0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000d85eb87cab9041ad00764b95796702b1104f42d7000000000000000000000000640952e7984f2ecedead8fd97aa618ab1210a21c000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000176c40000000000000000000000000000000000000000000000000000000000000184303006670000000000000000000000000000000000000000000000000000000000000020000000380000000000000000000000000000000000000000000000000000000003020301000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000080000000200000bfc640952e7984f2ecedead8fd97aa618ab1210a21c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f4f67e8fbd5071b11ba4266cc92e370588d8b129000000000000000000000000244619179a9457d7a4f9fb432447e6de6b9ebb5400000000000000000000000000000000000000000000000000000000000176c400000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000